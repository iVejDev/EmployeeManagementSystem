@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle font-weight-bold" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <i class="fa fa-user-circle mr-1"></i> @User.Identity.Name
            </a>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdown">
                @if (User.IsInRole("Admin"))
                {
                    <a class="dropdown-item" asp-controller="Users" asp-action="Index">
                        <i class="fa fa-users mr-1"></i> Hantera användare
                    </a>
                    <div class="dropdown-divider"></div>
                }
                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="dropdown-item">
                        <i class="fa fa-sign-out-alt mr-1"></i> Logga ut
                    </button>
                </form>
            </div>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">
                <i class="fa fa-sign-in-alt mr-1"></i> Logga in
            </a>
        </li>
    }
</ul>